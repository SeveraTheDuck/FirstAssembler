        jmp :main

; GetCirclePosition - function that gets coordinates of the center of the circle
; Param  - none
; Return - rax = x, rbx = y
:GetCirclePosition
        in
        pop rax
        in
        pop rbx

        ret

; GetCircleRadius - function that gets radius of the circle
; Param  - none
; Return - rcx = r
:GetCircleRadius
        in
        pop rcx

        ret

; CheckPoint - function thar checks wether the point is in the circle
; Param - rax = x, rbx = y, rcx = r, rdx = num_of_point in array
; If the point is in the circle, jmp to :MakePoint, else :NextIteration
:CheckPoint
        push rdx
        push 32
        div_module
        push rax
        sub
        push 2
        pow

        push rdx
        push 32
        div
        push rbx
        sub
        push 2
        pow

        add
        push rcx
        push 2
        pow

        jae :MakePoint

:NextIteration
        push rdx 1
        pop rdx

        push rdx
        push 1024
        ja :CheckPoint

        ret

; Write in RAM if the point is in circle
:MakePoint
        push 1
        pop [rdx]
        jmp :NextIteration

:main
        call :GetCirclePosition
        call :GetCircleRadius

        push 0
        pop rdx
        call :CheckPoint

        mem_print

        hlt
